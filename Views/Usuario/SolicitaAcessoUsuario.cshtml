
@{
    ViewBag.Title = "Solicitação de Acesso para Usuario";
}

@section css{
    <link href="../Content/assets/plugins/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css">
    <link href="../Content/assets/plugins/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css">
    <link href="../Content/assets/plugins/select2/dist/css/select2.min.css" rel="stylesheet" type="text/css">
    <link href="../Content/assets/plugins/switchery/dist/switchery.min.css" rel="stylesheet">
    <link href="../Content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet">
    <link href="../Content/assets/plugins/bootstrap-tagsinput/dist/bootstrap-tagsinput.css" rel="stylesheet">
    <link href="../Content/assets/plugins/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.css" rel="stylesheet">
    <link href="../Content/assets/plugins/multiselect/css/multi-select.css" rel="stylesheet" type="text/css">
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-10">
            <div class="card card-outline-info">
              
                <div class="card-body"  right 50px>
                    <form action="#" class="form-horizontal form-bordered">
                        <div class="form-body">
                            <div class="form-group">
                                <h5 class="m-t-30">RACF</h5>
                                <input type="text" id="txtRacf" class="form-control" placeholder="Racf" autocomplete="off" name="perfil" required="" aria-required="true" style="width:500px;">
                                <h5 class="m-t-30">Funcional</h5>
                                <input type="text" id="txtFuncional" class="form-control" placeholder="Funcional" autocomplete="off" name="perfil" required="" aria-required="true" style="width: 500px;">
                                <h5 class="m-t-30">E-mail</h5>
                                <input type="text" id="txtEmail" class="form-control" placeholder="Email" autocomplete="off" name="perfil" required="" aria-required="true" style="width: 500px;">
                                <div class="row">
                                    <div class="col-md-12">
                                        <select class="form-control todo-taskbody-tags select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                                            <option value="todos">Todos</option>
                                            <option value="gerencia">Gerencia</option>
                                        </select>
                                    </div>
                                    <br />
                                    <div class="col-md-7">
                                        <h5 class="m-t-20">Perfil:</h5>
                                        <select class="form-control form-control-line">
                                            <option value="Master">Master</option>
                                            <option value="Gerencia">Gerência</option>

                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="offset-sm-3 col-md-12 text-right">
                                            <button type="submit" class="btn btn-success"> <i class="fa fa-check"></i>Salvar</button>
                                            <button type="button" class="btn btn-inverse">Cancelar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="../Content/js/custom.min.js"></script>
    <script src="../Content/assets/plugins/switchery/dist/switchery.min.js"></script>
    <script src="../Content/assets/plugins/select2/dist/js/select2.full.min.js" type="text/javascript"></script>
    <script src="../Content/assets/plugins/bootstrap-select/bootstrap-select.min.js" type="text/javascript"></script>
    <script src="../Content/assets/plugins/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js"></script>
    <script src="../Content/assets/plugins/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="../Content/assets/plugins/multiselect/js/jquery.multi-select.js"></script>
    <script>
        jQuery(document).ready(function () {
            // Switchery
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
            $('.js-switch').each(function () {
                new Switchery($(this)[0], $(this).data());
            });
            // For select 2
            $(".select2").select2();
            $('.selectpicker').selectpicker();
            //Bootstrap-TouchSpin
            $(".vertical-spin").TouchSpin({
                verticalbuttons: true,
                verticalupclass: 'ti-plus',
                verticaldownclass: 'ti-minus'
            });
            var vspinTrue = $(".vertical-spin").TouchSpin({
                verticalbuttons: true
            });
            if (vspinTrue) {
                $('.vertical-spin').prev('.bootstrap-touchspin-prefix').remove();
            }
            $("input[name='tch1']").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 2,
                boostat: 5,
                maxboostedstep: 10,
                postfix: '%'
            });
            $("input[name='tch2']").TouchSpin({
                min: -1000000000,
                max: 1000000000,
                stepinterval: 50,
                maxboostedstep: 10000000,
                prefix: '$'
            });
            $("input[name='tch3']").TouchSpin();
            $("input[name='tch3_22']").TouchSpin({
                initval: 40
            });
            $("input[name='tch5']").TouchSpin({
                prefix: "pre",
                postfix: "post"
            });
            // For multiselect
            $('#pre-selected-options').multiSelect();

            $('#optgroup').multiSelect({ 
                selectableOptgroup: true
            });
           
            $('#public-methods').multiSelect();
            $('#select-all').click(function () {
                $('#public-methods').multiSelect('select_all');
                return false;
            });
            $('#dese    lect-all').click(function () {
                $('#public-methods').multiSelect('deselect_all');
                return false;
            });
            $('#refresh').on('click', function () {
                $('#public-methods').multiSelect('refresh');
                return false;
            });
            $('#add-option').on('click', function () {
                $('#public-methods').multiSelect('addOption', {
                    value: 42,
                    text: 'test 42',
                    index: 0
                });
                return false;
            });
            $(".ajax").select2({
                ajax: {
                    url: "https://api.github.com/search/repositories",
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;
                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) {
                    return markup;
                }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: formatRepo, // omitted for brevity, see the source of this page
                templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
            });
        });
    </script>
}
